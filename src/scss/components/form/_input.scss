// ============================================
// INPUT COMPONENT
// components/form/_input.scss
// --------------------------------------------
// Styles for text-based input elements, wrappers, labels, 
// and input state variants.
// - Fully tokenized via CSS variables
// - Supports focus, disabled, outline, filled, success, and danger states
// - Includes wrapper, bar animation, and icon positioning
// - Responsive-friendly and scalable
// ============================================

.input {

	// Base reset and layout
	-webkit-appearance: none;
	box-sizing: border-box;
	display: inline-block;
	width: 100%;
	max-width: 100%;
	height: 2.5rem;
	margin: 0;

	padding: var(--spacing-sm) var(--spacing-md);
	font: inherit;
	font-size: var(--font-size-base);

	color: var(--color-text);
	background-color: var(--color-surface);
	border: 1px solid var(--color-border);
	border-radius: var(--radius-sm);

	transition: color var(--transition-duration) ease,
				background-color var(--transition-duration) ease,
				border var(--transition-duration) ease;

	// Focus state
	&:focus {
		outline: none;
		//border-color: var(--color-primary);
	}

	// Disabled state
	&:disabled {
		color: var(--color-text-muted);
		background-color: var(--color-surface-disabled);
		//border-color: var(--color-border-muted);
		cursor: not-allowed;
	}

    // Placeholder styling
    &::placeholder { color: var(--color-text-secondary); opacity: 1; }
    &::-moz-placeholder { opacity: 1; } // Firefox

	// Autofill overrides
	&:-webkit-autofill {
		background-color: var(--color-surface, #f5f5f5) !important;
		-webkit-box-shadow: 0 0 0 1000px var(--color-surface, #f5f5f5) inset !important;
		-webkit-text-fill-color: var(--color-text, #000) !important;
	}

	&:-moz-autofill {
		background-color: var(--color-surface, #f5f5f5) !important;
		color: var(--color-text, #000) !important;
	}

    // Non-data-input and non-input adjustments
    &:not([data-input]) { border-radius: var(--radius-default); }
    &:not(input) { line-height: 2.5rem; }


    // ----------------------------------------
    // Input Types
    // ----------------------------------------

	&[type="search"] {
		&::-webkit-search-cancel-button,
		&::-webkit-search-decoration {
			-webkit-appearance: none;
		}
	}

	&[type="number"] {
		&::-webkit-inner-spin-button,
		&::-webkit-outer-spin-button {
			height: auto;
		}
	}

	&[list] {
		padding-right: var(--spacing-lg);
		background-repeat: no-repeat;
		background-position: 100% 50%;
	}

    // ----------------------------------------
    // Outline variant
    // ----------------------------------------

	&-outline {
		height: 2.5rem !important;
		border-radius: var(--radius-default) !important;
		border-width: 1px !important;
		padding: var(--spacing-sm) var(--spacing-md) 0.4375rem !important;

		&:focus {
			border-color: var(--color-primary) !important;
		}
	}

    // ----------------------------------------
    // Bar animation (for Material-style inputs)
    // ----------------------------------------

	&-bar {
		display: block;
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;

		&:before,
		&:after {
			content: '';
			position: absolute;
			bottom: 0;
			width: 0;
			height: 2px;
			background: var(--color-primary);
			transition: width var(--transition-duration) cubic-bezier(.55, 0, .1, 1);
		}

		&:before { left: 50%; }
		&:after  { right: 50%; }
	}

    // ----------------------------------------
    // Wrapper and labels
    // ----------------------------------------

	&-wrapper {
		position: relative;
		display: flex;
		align-items: center;
		width: 100%;

		>label {
			position: absolute;
			top: var(--spacing-md);
			left: var(--spacing-sm);
			color: var(--color-text-muted);
			font-size: 0.875rem;
			pointer-events: none;
			transition: all var(--transition-duration) cubic-bezier(.55, 0, .1, 1);

			&.label-large {
				font-size: 1.125rem;
				top: 1.125rem;

				+[data-input] {
					height: 4rem;
					padding: 1.125rem var(--spacing-md) 0.25rem;
				}
			}

			&.label-small {
				font-size: 0.75rem;
				top: 0.75rem;

				+[data-input] {
					height: 2.5rem;
					padding: 1rem var(--spacing-sm) 0.125rem;
				}
			}

			+textarea[data-input] {
				margin-top: 1.375rem;
				padding-top: 0;
			}

			+input[data-input] {
				padding: 1.125rem var(--spacing-sm) 0.25rem;
				height: 3.25rem;
			}
		}

		.form-icon {
			margin-top: -1px;
			height: 2.5rem;
		}

		/* State variants */
		&-danger {
			>label { color: var(--color-danger); }
			.input-bar:before,
			.input-bar:after { background: var(--color-danger); }
			.form-icon { color: var(--color-danger); }
		}

		&-success {
			.input-bar:before,
			.input-bar:after { background: var(--color-success); }
			.form-icon { color: var(--color-success); }
		}

		&-outline {
			label {
				background: var(--color-surface);
				border-radius: var(--radius-sm);
				top: 0.625rem;
				left: var(--spacing-md);
				display: inline-block;

				+input[data-input] {
					height: 2.5rem;
					padding: 0.625rem var(--spacing-md) 0.375rem;
				}

				+textarea[data-input] {
                    height: auto;
					margin-top: 0;
					padding-top: var(--spacing-sm);
				}
			}

			.form-icon {
				left: 0;
				margin-top: 0;

				&-flip {
					right: 0;
					left: auto;
				}
			}

			&.input-wrapper-danger label { color: var(--color-danger); }
		}
	}

	/*------------------------------------*\
	  FILLED / FOCUS STATES
	\*------------------------------------*/
	&-filled,
	&-focus {
		>label {
			top: 0.25rem;
			font-size: 0.75rem;

			&.label-large { font-size: 0.875rem; top: 0.375rem; }
			&.label-small { font-size: 0.625rem; top: 0.25rem; }
		}

		&.input-wrapper-count .text-count-wrapper {
			opacity: 1;
		}

		&.input-wrapper-outline > label {
			top: -0.5625rem;
			left: var(--spacing-sm);
			padding: 0 var(--spacing-xs);
		}
	}

	&-focus {
		.input-bar:before,
		.input-bar:after { width: 50%; }
	}

	/*------------------------------------*\
	  MATCH FIELD LAYOUT
	\*------------------------------------*/
	&-match-field {
		display: flex;
		align-items: center;
		height: 3.25rem;
	}
}