// =============================================================================
// LAYOUT: LEFT SIDEBAR + MAIN (NO HEADER)
// components/_grid-sm.scss
// -----------------------------------------------------------------------------
// Responsive CSS Grid layout with a fixed left sidebar and flexible main
// content. Header is omitted in this variant.
//
// Features:
// - Two-column grid: sidebar (fixed) and main content (flexible)
// - Vertical scrolling on sidebar and main content
// - Sidebar can be hidden via `.sidebar-hidden` modifier
// - Responsive stacking for small viewports (mobile)
//
// Dependencies:
// - CSS custom properties:
//   --sidebar-width (--sw)
//   --layout-row-gap (--lrg)
//   --layout-column-gap (--lcg)
//   --footer-height-mobile (--fhm)
// - Theming via semantic tokens from _tokens.scss
//
// Usage example:
// <body class="l-sm sidebar-hidden">
//   <aside>Sidebar content</aside>
//   <main>Main content</main>
// </body>
// =============================================================================

@use '../../abstracts/variables/breakpoints' as *;

.l-sm {

	display: grid;

	// -----------------------------------------------------------------
	// Grid Template Areas & Columns
	// -----------------------------------------------------------------
	grid-template-areas: "sidebar main";

	// Define columns: fixed sidebar width + flexible main content
	grid-template-columns: var(--sw, var(--sidebar-width)) 1fr;

	// Define gaps between rows and columns with fallback variables
	row-gap: var(--lrg, var(--layout-row-gap));
	column-gap: var(--lcg, var(--layout-column-gap));

	height: 100vh;
	margin: 0;
	padding: 0;

	background-color: var(--color-background);
	color: var(--color-text);

	// -----------------------------------------------------------------
	// Sidebar Block
	// -----------------------------------------------------------------
	>aside {
		grid-area: sidebar;
		overflow-y: auto;
		min-height: 0;
		background-color: var(--color-background);
		color: var(--color-text);
		overscroll-behavior: contain;

		// Optional spacing
		// padding: var(--spacing-default);
	}

	// -----------------------------------------------------------------
	// Main Content Block
	// -----------------------------------------------------------------
	>main {
		grid-area: main;
		overflow-y: auto;
		min-height: 0;
		background-color: var(--color-background);
		color: var(--color-text);
		overscroll-behavior: contain;

		// Optional spacing
		// padding: var(--spacing-default);
	}

	// -----------------------------------------------------------------
	// Modifier: Hide Sidebar
	// -----------------------------------------------------------------

	&.sidebar-hidden {
		grid-template-areas: "main";
		grid-template-columns: 1fr;

		> aside {
			width: 0;
			overflow: hidden;
			transform: translateX(-100%);
			visibility: hidden;
		}
	}

	// -----------------------------------------------------------------
	// Responsive: Small Screens 
	// -----------------------------------------------------------------
	@media (max-width: $breakpoint-sm-max) {
		& {
			grid-template-areas:
				"main"
				"sidebar";

			// Rows: flexible main content + fixed footer height for sidebar
			grid-template-rows:
				1fr
				var(--fhm, var(--footer-height-mobile));

			// Single column layout for stacking
			grid-template-columns: 1fr;

			// Optional: add subtle separation on mobile for sidebar
			>aside {
				border-top: 1px solid var(--color-border-muted);
			}
		}
	}
}

