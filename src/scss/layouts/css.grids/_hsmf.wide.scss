// =============================================================================
// LAYOUT: HEADER + SIDEBAR + MAIN + FOOTER (Wide Version)
// components/_grid-hsmf.scss
// -----------------------------------------------------------------------------
// Responsive CSS Grid layout with full-width header, fixed sidebar, flexible
// main content, and full-width footer.
//
// Features:
// - Sidebar can be hidden via `.sidebar-hidden`
// - Responsive vertical stacking on small screens (mobile)
// - Smooth transitions for sidebar toggle
//
// Dependencies:
// - CSS custom properties:
//   --sidebar-width (--sw)
//   --header-height (--hh)
//   --header-height-mobile (--hhm)
//   --footer-height (--fh)
//   --footer-height-mobile (--fhm)
//   --layout-row-gap (--lrg)
//   --layout-column-gap (--lcg)
//   --margin (--m)
//
// Usage example:
// <body class="l-hsmf-wide sidebar-hidden">
//   <header>Header content</header>
//   <aside>Sidebar content</aside>
//   <main>Main content</main>
//   <footer>Footer content</footer>
// </body>
// =============================================================================

@use '../../abstracts/variables/breakpoints' as *;

.l-hsmf-wide {
	
	display: grid;

	// -----------------------------------------------------------------
	// Grid Template Areas
	// -----------------------------------------------------------------
	grid-template-areas:
		"header header"
		"sidebar main"
		"footer footer";

	// Define rows: header, flexible main, footer using CSS variables with fallback
	grid-template-rows:
		var(--hh, var(--header-height))
		1fr
		var(--fh, var(--footer-height));

	// Columns: fixed sidebar width + flexible main content area
	grid-template-columns:
		var(--sw, var(--sidebar-width))
		1fr;

	// Gaps between rows and columns with fallbacks
	row-gap: var(--lrg, var(--layout-row-gap));
	column-gap: var(--lcg, var(--layout-column-gap));

	height: 100vh;
	margin: var(--m, 0);
	padding: 0;

	transition:
		grid-template-columns 250ms ease-in-out,
		column-gap 250ms ease-in-out;

	// -----------------------------------------------------------------
	// Header Block
	// -----------------------------------------------------------------
	>header {
		grid-area: header;
		background-color: var(--color-background);
		//padding: var(--spacing-default);
	}

	// -----------------------------------------------------------------
	// Sidebar Block
	// -----------------------------------------------------------------
	>aside {
		grid-area: sidebar;
		background-color: var(--color-background);
		overflow-y: auto;
		min-height: 0;
		//padding: var(--spacing-default);
	}

	// -----------------------------------------------------------------
	// Main Block
	// -----------------------------------------------------------------
	>main {
		grid-area: main;
		background-color: var(--color-background);
		overflow-y: auto;
		min-height: 0;
		position: relative;
		//padding: var(--spacing-default);
	}

	// -----------------------------------------------------------------
	// Footer Block
	// -----------------------------------------------------------------
	>footer {
		grid-area: footer;
		background-color: var(--color-background);
		//padding: var(--spacing-default);
	}

	// -----------------------------------------------------------------
	// Modifier: Hide Sidebar
	// -----------------------------------------------------------------
	&.sidebar-hidden {

		grid-template-columns: 0 1fr;
		column-gap: 0;

		>aside {
			width: 0;
			visibility: hidden;
			pointer-events: none;
			overflow: hidden;
			user-select: none;
		}
	}

	// -----------------------------------------------------------------
	// Responsive: Small Screens
	// -----------------------------------------------------------------
	// Adjust header height on small devices

	@media (max-width: $breakpoint-sm-max) {

		grid-template-areas:
			"header"
			"main"
			"sidebar"
			"footer";

		grid-template-rows:
			var(--hhm, var(--header-height-mobile))
			1fr
			70px
			var(--fhm, var(--footer-height-mobile));

		grid-template-columns: 1fr;

		row-gap: var(--lrg, var(--layout-row-gap));
		column-gap: 0;

		aside {
			border-top: 1px solid var(--color-border-muted);
			overflow-y: visible;
			min-height: auto;
			visibility: visible !important;
			pointer-events: auto !important;
			width: auto !important;
		}
		
	}
}